<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE log4j:configuration SYSTEM "log4j.dtd">
 
<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">
    <!-- 日志输出到控制台 -->
    <appender name="STDOUT" class="org.apache.log4j.ConsoleAppender">
        <param name="Encoding" value="UTF-8" />
        <!-- 日志输出格式 -->
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="
            %n %-5p %d{yyyy-MM-dd HH:mm:ss,SSS} %n %m %n
                 (C:%F  M:%M  R:%L)\n" />
        </layout>
     </appender>
    <!--
           1. 指定logger的设置，additivity是否遵循缺省的继承机制
           2. 当additivity="false"时，root中的配置就失灵了，不遵循缺省的继承机制
           3. 代码中使用Logger.getLogger("logTest")获得此输出器，且不会使用根输出器
       -->
     <logger name="java.sql">
       <level value="debug" />
     </logger>

     <logger name="org.apache.ibatis">
       <level value="info" />
     </logger>
    <!-- 根logger的设置，若代码中未找到指定的logger，则会根据继承机制，使用根logger-->
    <root>
       <level value="debug" />
       <appender-ref ref="STDOUT" />
     </root>
</log4j:configuration>
<!--<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">-->
<!--     <appender name="STDOUT" class="org.apache.log4j.ConsoleAppender">-->
<!--       <param name="Encoding" value="UTF-8" />-->
<!--       <layout class="org.apache.log4j.PatternLayout">-->
<!--        <param name="ConversionPattern" value="%-5p %d{MM-dd HH:mm:ss,SSS} %m  (%F:%L) \n" />-->
<!--       </layout>-->
<!--     </appender>-->
<!--     <logger name="java.sql">-->
<!--       <level value="debug" />-->
<!--     </logger>-->
<!--     <logger name="org.apache.ibatis">-->
<!--       <level value="info" />-->
<!--     </logger>-->
<!--     <root>-->
<!--       <level value="debug" />-->
<!--       <appender-ref ref="STDOUT" />-->
<!--     </root>-->
<!--</log4j:configuration>-->